/**
 * Extend jquery with a scrollspy plugin.
 * This watches the window scroll and fires events when elements are scrolled into viewport.
 *
 * throttle() and getTime() taken from Underscore.js
 * https://github.com/jashkenas/underscore
 *
 * @author Copyright 2013 John Smart
 * @license https://raw.github.com/thesmart/jquery-scrollspy/master/LICENSE
 * @see https://github.com/thesmart
 * @version 0.1.2
 */
!function(t){function r(r,e,n,i){var o=t();return t.each(a,function(t,a){if(a.height()>0){var l=a.offset().top,c=a.offset().left,s=c+a.width(),u=l+a.height(),f=!(c>e||i>s||l>n||r>u);f&&o.push(a)}}),o}function e(){++s;var e=o.scrollTop(),n=o.scrollLeft(),i=n+o.width(),a=e+o.height(),c=r(e+u.top+200,i+u.right,a+u.bottom,n+u.left);t.each(c,function(t,r){var e=r.data("scrollSpy:ticks");"number"!=typeof e&&r.triggerHandler("scrollSpy:enter"),r.data("scrollSpy:ticks",s)}),t.each(l,function(t,r){var e=r.data("scrollSpy:ticks");"number"==typeof e&&e!==s&&(r.triggerHandler("scrollSpy:exit"),r.data("scrollSpy:ticks",null))}),l=c}function n(){o.trigger("scrollSpy:winSize")}/**
	 * Returns a function, that, when invoked, will only be triggered at most once
	 * during a given window of time. Normally, the throttled function will run
	 * as much as it can, without ever going more than once per `wait` duration;
	 * but if you'd like to disable the execution on the leading edge, pass
	 * `{leading: false}`. To disable execution on the trailing edge, ditto.
	 * @license https://raw.github.com/jashkenas/underscore/master/LICENSE
	 * @param {function} func
	 * @param {number} wait
	 * @param {Object=} options
	 * @returns {Function}
	 */
function i(t,r,e){var n,i,o,a=null,l=0;e||(e={});var c=function(){l=e.leading===!1?0:f(),a=null,o=t.apply(n,i),n=i=null};return function(){var s=f();l||e.leading!==!1||(l=s);var u=r-(s-l);return n=this,i=arguments,0>=u?(clearTimeout(a),a=null,l=s,o=t.apply(n,i),n=i=null):a||e.trailing===!1||(a=setTimeout(c,u)),o}}var o=t(window),a=[],l=[],c=!1,s=0,u={top:0,right:0,bottom:0,left:0},f=Date.now||function(){return(new Date).getTime()};t.scrollSpy=function(r,n){var l=[];r=t(r),r.each(function(r,e){a.push(t(e)),t(e).data("scrollSpy:id",r),t("a[href=#"+t(e).attr("id")+"]").click(function(r){r.preventDefault();var e=t(this.hash).offset().top+1;t("html, body").animate({scrollTop:e-200},{duration:400,easing:"easeOutCubic"})})}),n=n||{throttle:100},u.top=n.offsetTop||0,u.right=n.offsetRight||0,u.bottom=n.offsetBottom||0,u.left=n.offsetLeft||0;var s=i(e,n.throttle||100),f=function(){t(document).ready(s)};return c||(o.on("scroll",f),o.on("resize",f),c=!0),setTimeout(f,0),r.on("scrollSpy:enter",function(){l=t.grep(l,function(t){return 0!=t.height()});var r=t(this);l[0]?(t("a[href=#"+l[0].attr("id")+"]").removeClass("active"),r.data("scrollSpy:id")<l[0].data("scrollSpy:id")?l.unshift(t(this)):l.push(t(this))):l.push(t(this)),t("a[href=#"+l[0].attr("id")+"]").addClass("active")}),r.on("scrollSpy:exit",function(){if(l=t.grep(l,function(t){return 0!=t.height()}),l[0]){t("a[href=#"+l[0].attr("id")+"]").removeClass("active");var r=t(this);l=t.grep(l,function(t){return t.attr("id")!=r.attr("id")}),l[0]&&t("a[href=#"+l[0].attr("id")+"]").addClass("active")}}),r},t.winSizeSpy=function(r){return t.winSizeSpy=function(){return o},r=r||{throttle:100},o.on("resize",i(n,r.throttle||100))},t.fn.scrollSpy=function(r){return t.scrollSpy(t(this),r)}}(jQuery);